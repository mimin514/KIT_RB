// lcd_i2c.c
#include "lcd_i2c.h"

static void lcd_send_byte(I2C_HandleTypeDef *hi2c, uint8_t data, uint8_t mode);
static void lcd_toggle_enable(I2C_HandleTypeDef *hi2c, uint8_t data);

void lcd_init(I2C_HandleTypeDef *hi2c) {
    HAL_Delay(50);
    lcd_send_cmd(hi2c, 0x30);
    HAL_Delay(5);
    lcd_send_cmd(hi2c, 0x30);
    HAL_Delay(1);
    lcd_send_cmd(hi2c, 0x30);
    HAL_Delay(10);
    lcd_send_cmd(hi2c, 0x20);
    HAL_Delay(10);

    lcd_send_cmd(hi2c, 0x28);
    lcd_send_cmd(hi2c, 0x08);
    lcd_send_cmd(hi2c, 0x01);
    HAL_Delay(2);
    lcd_send_cmd(hi2c, 0x06);
    lcd_send_cmd(hi2c, 0x0C);
}

void lcd_send_string(I2C_HandleTypeDef *hi2c, char *str) {
    while (*str) {
        lcd_send_data(hi2c, *str++);
    }
}

void lcd_clear(I2C_HandleTypeDef *hi2c) {
    lcd_send_cmd(hi2c, 0x01);
    HAL_Delay(2);
}

void lcd_send_cmd(I2C_HandleTypeDef *hi2c, char cmd) {
    lcd_send_byte(hi2c, cmd, LCD_COMMAND);
}

void lcd_send_data(I2C_HandleTypeDef *hi2c, char data) {
    lcd_send_byte(hi2c, data, LCD_DATA);
}

static void lcd_send_byte(I2C_HandleTypeDef *hi2c, uint8_t data, uint8_t mode) {
    uint8_t high_nibble = (data & 0xF0) | mode | 0x08;
    uint8_t low_nibble = ((data << 4) & 0xF0) | mode | 0x08;

    lcd_toggle_enable(hi2c, high_nibble);
    lcd_toggle_enable(hi2c, low_nibble);
}

static void lcd_toggle_enable(I2C_HandleTypeDef *hi2c, uint8_t data) {
    HAL_I2C_Master_Transmit(hi2c, LCD_ADDR, &data, 1, HAL_MAX_DELAY);
    HAL_Delay(1);
    data &= ~0x04;
    HAL_I2C_Master_Transmit(hi2c, LCD_ADDR, &data, 1, HAL_MAX_DELAY);
    HAL_Delay(1);
}
