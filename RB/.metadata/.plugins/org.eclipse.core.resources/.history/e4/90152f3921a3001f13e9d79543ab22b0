/*
 * LCD_I2C.c
 *
 *  Created on: Nov 15, 2024
 *      Author: User
 */


// lcd_i2c.c
#include "LCD_I2C.h"
#include "main.h"
// Internal functions for LCD control
static void lcd_send_byte(I2C_HandleTypeDef *hi2c, uint8_t data, uint8_t mode);
static void lcd_toggle_enable(I2C_HandleTypeDef *hi2c, uint8_t data);

void lcd_init(I2C_HandleTypeDef *hi2c) {
    HAL_Delay(50); // LCD power-on delay
    lcd_send_cmd(0x30); // Wake up
    HAL_Delay(5);
    lcd_send_cmd(0x30); // Wake up
    HAL_Delay(1);
    lcd_send_cmd(0x30); // Wake up
    HAL_Delay(10);
    lcd_send_cmd(0x20); // Set 4-bit mode
    HAL_Delay(10);

    lcd_send_cmd(0x28); // Function set: 4-bit, 2-line, 5x8 dots
    lcd_send_cmd(0x08); // Display off
    lcd_send_cmd(0x01); // Clear display
    HAL_Delay(2);
    lcd_send_cmd(0x06); // Entry mode set: increment cursor, no shift
    lcd_send_cmd(0x0C); // Display on, cursor off
}

void lcd_send_string(char *str) {
    while (*str) {
        lcd_send_data(*str++);
    }
}

void lcd_clear(void) {
    lcd_send_cmd(0x01); // Clear display
    HAL_Delay(2);
}

void lcd_send_cmd(char cmd) {
    lcd_send_byte(&hi2c1, cmd, LCD_COMMAND);
}

void lcd_send_data(char data) {
    lcd_send_byte(&hi2c1, data, LCD_DATA);
}

static void lcd_send_byte(I2C_HandleTypeDef *hi2c, uint8_t data, uint8_t mode) {
    uint8_t high_nibble = (data & 0xF0) | mode | 0x08; // Enable backlight
    uint8_t low_nibble = ((data << 4) & 0xF0) | mode | 0x08;

    lcd_toggle_enable(hi2c, high_nibble);
    lcd_toggle_enable(hi2c, low_nibble);
}

static void lcd_toggle_enable(I2C_HandleTypeDef *hi2c, uint8_t data) {
    HAL_I2C_Master_Transmit(hi2c, LCD_ADDR, &data, 1, HAL_MAX_DELAY);
    HAL_Delay(1);
    data &= ~0x04; // Enable bit low
    HAL_I2C_Master_Transmit(hi2c, LCD_ADDR, &data, 1, HAL_MAX_DELAY);
    HAL_Delay(1);
}
